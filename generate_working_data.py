# Python 3.x
#

#

import okctools


def function1(df):
    """DataFrame -> DataFrame
    Take a DataFrame generated by the OKCScraper and transform some part of it
    to make it better suited for analysis.
    """

    pass


def remove_empty_profiles(df):
    """DataFrame -> DataFrame
    Remove empty profiles from OKC profiles DataFrame. This is straightforward
    because empty profiles will only contain a username and nothing else.
    """

    df_out = df[df.name.notna()]
    df_out.reset_index(drop=True, inplace=True)

    return df_out


def create_wordcount(df):
    """DataFrame -> DataFrame
    Use the 'essays' column of an OKC profiles DataFrame to create a new
    column of word counts.
    """

    if 'essays' not in df.columns:
        print('Input DataFrame does not contain column "essays".')
        return df

    wordcounts = list(map(lambda essay: okctools.count_words(essay),
                          df.loc[:, 'essays']))
    # "df.loc[:, wordcount] = stuff" gives a warning
    df = df.assign(wordcount=wordcounts)

    return df


def lists_to_dummies(df):
    """DataFrame -> DataFrame
    Turn list values into dummy variables. For example, df.orientation[0] might
    be the list ['pansexual','queer'], which would be turned into the dummy
    variables orientation_pansexual and orientation_queer
"""
    
    listcols = []
    for col in df.drop('essays', axis=1).columns:
        if type(df.loc[0, col]) == list:
            listcols.append(col)

    print(listcols)


def main():
    infolder = 'data/input/'
    outfolder = 'data/working/'

    df_raw = okctools.load_profiles_df(version='py3')
    df_no_empty = remove_empty_profiles(df_raw)
    df = create_wordcount(df_no_empty)
    df.drop(['essays', 'city', 'region'], inplace=True)


if __name__ == "__main__":
    main()
